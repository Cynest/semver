#!/bin/bash
#
# Create changelog from a git repository

set -eo pipefail

usage() {
    cat <<EOM
usage: changelog.sh [options] <ref>

Generate a changelog from the git reference object specified by <ref> or HEAD
if none provided. See git help documentation on reference objects.

  -a   describe annotated tags
  -l   describe lightweight tags
  -m   generate a changelog in markdown format (default)
  -r   generate a changelog in rpm format
  -p   pretty format string passed to git log

EOM
}

get_tag() {
    local args=$1
    local firsttag=$(git describe $args --abbrev=0 $ref)
    if [[ $(git rev-list --count --no-merges $ref ^${firsttag}) -eq 0 ]]; then
        tag=$(git describe $args --abbrev=0 ${firsttag}~1)
    else
        tag=$(git describe $args --abbrev=0 $ref)
    fi
}

print_markdown() {
    local tagcount=0
    while read -n1 c; do
        case "$c" in
            "a")
                get_tag
                tagcount=$(( tagcount + 1 ))
                ;;
            "l")
                get_tag "--tags"
                tagcount=$(( tagcount + 1 ))
                ;;
        esac
        echo "## Changes since $tag"
        git log $tag..$ref --oneline --no-merges --pretty="$pretty"
        if [[ $tagcount -lt ${#tagorder} ]]; then
            echo ""
        fi
    done < <(echo -n "$tagorder")
}

print_rpm() {
    local args=""
    if [[ "${tagorder:0:1}" == "l" ]]; then
        args="--tags"
    fi
    get_tag "$args"
    thisref=$(git describe $args --abbrev=0 $ref)
    thisrev=$(git rev-list --max-count=1 $ref)
    echo "* $(date +'%a %b %d %Y')  $thisref  ${thisrev:0:8}"
    git log $tag..$ref --oneline --no-merges --pretty="- %s"
}

main() {
    # get all options
    tagorder=""
    outputformat="markdown"
    pretty="* %h %s"
    # input overrides
    while getopts "almrp:h" arg; do
        case $arg in
            a) tagorder="${tagorder}a";;
            l) tagorder="${tagorder}l";;
            m) outputformat="markdown";;
            r) outputformat="rpm";;
            p) pretty=$OPTARG;;
            h)
                usage
                exit 0
                ;;
            ?)
                usage
                exit 1
                ;;
        esac
    done
    readonly outputformat
    readonly pretty

    if [[ "$tagorder" == "" ]]; then
        tagorder="a"
    fi

    shift $((OPTIND - 1))

    if [[ $# -eq 0 ]]; then
        ref=HEAD
    else
        ref=$1
    fi

    # write out changelog
    case "$outputformat" in
    "markdown")
        print_markdown
        ;;
    "rpm")
        print_rpm
        ;;
    *)
        ;;
    esac
}

main "$@"
